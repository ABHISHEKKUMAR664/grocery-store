{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\grocery-store-college\\\\src\\\\features\\\\checkout\\\\index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Cart from \"../cart\";\nimport CheckoutForm from \"./form\";\nimport fetchApi from \"../../modules/fetch-api\";\nimport { Container, Grid } from \"semantic-ui-react\";\n\nfunction submitOrder(values, cart) {\n  const _values$order = values.order,\n        street = _values$order.street,\n        city = _values$order.city,\n        state = _values$order.state,\n        zipcode = _values$order.zipcode,\n        deliverytime = _values$order.deliverytime;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let name = user.first_name + \" \" + user.last_name;\n  let email = user.email;\n  let user_id = user.id;\n  let order_total = localStorage.getItem(\"cartTotal\");\n  console.log(\"Order Total: \", order_total);\n  fetchApi(\"post\", \"https://grocery-delivery-backend.herokuapp.com/api/v1/orders\", // \"http://localhost:3000/api/v1/orders\",\n  {\n    order: {\n      name,\n      email,\n      street,\n      city,\n      state,\n      zipcode,\n      deliverytime,\n      user_id,\n      order_total,\n      order_items_attributes: cart.map(item => ({\n        product_id: item.id,\n        quantity: item.quantity\n      }))\n    }\n  }).then(json => {\n    console.log(\"JSON response from fetch post api orders\", json);\n\n    if (json.errors) {\n      alert(\"something went wrong!\");\n      return;\n    }\n\n    localStorage.removeItem(\"state\");\n    document.location.href = \"/orders/\".concat(json.id);\n  });\n}\n\nfunction Checkout(props) {\n  const cart = props.cart;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CheckoutForm, {\n    onSubmit: values => submitOrder(values, cart),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Cart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart\n  };\n}\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["C:/Users/hp/Desktop/grocery-store-college/src/features/checkout/index.js"],"names":["React","connect","Cart","CheckoutForm","fetchApi","Container","Grid","submitOrder","values","cart","order","street","city","state","zipcode","deliverytime","user","JSON","parse","localStorage","getItem","name","first_name","last_name","email","user_id","id","order_total","console","log","order_items_attributes","map","item","product_id","quantity","then","json","errors","alert","removeItem","document","location","href","Checkout","props","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Cart from \"../cart\";\r\nimport CheckoutForm from \"./form\";\r\nimport fetchApi from \"../../modules/fetch-api\";\r\n\r\nimport { Container, Grid } from \"semantic-ui-react\";\r\n\r\nfunction submitOrder(values, cart) {\r\n  const { street, city, state, zipcode, deliverytime } = values.order;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let name = user.first_name + \" \" + user.last_name;\r\n  let email = user.email;\r\n  let user_id = user.id;\r\n  let order_total = localStorage.getItem(\"cartTotal\");\r\n  console.log(\"Order Total: \", order_total);\r\n\r\n  fetchApi(\r\n    \"post\",\r\n    \"https://grocery-delivery-backend.herokuapp.com/api/v1/orders\",\r\n    // \"http://localhost:3000/api/v1/orders\",\r\n    {\r\n      order: {\r\n        name,\r\n        email,\r\n        street,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        deliverytime,\r\n        user_id,\r\n        order_total,\r\n        order_items_attributes: cart.map(item => ({\r\n          product_id: item.id,\r\n          quantity: item.quantity\r\n        }))\r\n      }\r\n    }\r\n  ).then(json => {\r\n    console.log(\"JSON response from fetch post api orders\", json);\r\n    if (json.errors) {\r\n      alert(\"something went wrong!\");\r\n      return;\r\n    }\r\n    localStorage.removeItem(\"state\");\r\n    document.location.href = `/orders/${json.id}`;\r\n  });\r\n}\r\n\r\nfunction Checkout(props) {\r\n  const { cart } = props;\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <CheckoutForm onSubmit={values => submitOrder(values, cart)} />\r\n        </Grid.Column>\r\n        <Grid.Column width={12}>\r\n          <Cart />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"]},"metadata":{},"sourceType":"module"}