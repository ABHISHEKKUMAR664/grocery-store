{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\grocery-store-college\\\\src\\\\pages\\\\loginpage.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, Grid, Header, Segment, Divider } from \"semantic-ui-react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleLogin = event => {\n      event.preventDefault();\n      this.fetchLogin();\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  } //Collect info as it is typed and update state\n\n\n  fetchLogin() {\n    fetch(\"https://grocery-delivery-backend.herokuapp.com/api/v1/login\", {\n      // fetch(\n      //   \"https://cors-anywhere.herokuapp.com/https://grocery-delivery-backend.herokuapp.com/api/v1/login\",\n      //   {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          username: this.state.username,\n          password: this.state.password\n        }\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response.user); //store jwt token in local storage\n\n      if (response.jwt === undefined) {\n        alert(\"Invalid username or password\");\n      } else {\n        localStorage.setItem(\"jwt\", response.jwt);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        this.props.history.push(\"/\");\n      }\n    }).catch(err => {\n      console.error(\"Error: \", err);\n    });\n  }\n\n  handleRegisterClick() {\n    this.props.history.push(\"/register\");\n  }\n\n  render() {\n    // console.log(\"Current Login State = \", this.state);\n    return !localStorage.getItem(\"jwt\") ? React.createElement(Grid, {\n      verticalAlign: \"middle\",\n      columns: 2,\n      color: \"grey\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Log in or Register to start shopping!\"), React.createElement(Segment, {\n      placeholder: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      stackable: true,\n      columns: 2,\n      relaxed: \"very\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      icon: \"user\",\n      iconPosition: \"left\",\n      label: \"Username\",\n      placeholder: \"Username\",\n      name: \"username\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      icon: \"lock\",\n      iconPosition: \"left\",\n      label: \"Password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      content: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"orange\",\n      content: \"Register\",\n      icon: \"signup\",\n      size: \"big\",\n      onClick: event => this.handleRegisterClick(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      vertical: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Or\")))) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["C:/Users/hp/Desktop/grocery-store-college/src/pages/loginpage.js"],"names":["React","Component","Button","Form","Grid","Header","Segment","Divider","withRouter","Redirect","Login","constructor","handleChange","event","persist","setState","target","name","value","handleLogin","preventDefault","fetchLogin","state","username","password","fetch","method","headers","Accept","body","JSON","stringify","user","then","response","json","console","log","jwt","undefined","alert","localStorage","setItem","props","history","push","catch","err","error","handleRegisterClick","render","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  //Collect info as it is typed and update state\r\n  handleChange = event => {\r\n    event.persist();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleLogin = event => {\r\n    event.preventDefault();\r\n    this.fetchLogin();\r\n  };\r\n\r\n  fetchLogin() {\r\n    fetch(\"https://grocery-delivery-backend.herokuapp.com/api/v1/login\", {\r\n      // fetch(\r\n      //   \"https://cors-anywhere.herokuapp.com/https://grocery-delivery-backend.herokuapp.com/api/v1/login\",\r\n      //   {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        }\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response.user);\r\n        //store jwt token in local storage\r\n        if (response.jwt === undefined) {\r\n          alert(\"Invalid username or password\");\r\n        } else {\r\n          localStorage.setItem(\"jwt\", response.jwt);\r\n          localStorage.setItem(\"user\", JSON.stringify(response.user));\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error: \", err);\r\n      });\r\n  }\r\n\r\n  handleRegisterClick() {\r\n    this.props.history.push(\"/register\");\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"Current Login State = \", this.state);\r\n\r\n    return !localStorage.getItem(\"jwt\") ? (\r\n      <Grid verticalAlign=\"middle\" columns={2} color=\"grey\" centered>\r\n        <Grid.Column>\r\n          <br></br>\r\n          <Header as=\"h2\" textAlign=\"center\">\r\n            Log in or Register to start shopping!\r\n          </Header>\r\n          <Segment placeholder>\r\n            <Grid stackable columns={2} relaxed=\"very\">\r\n              <Grid.Column>\r\n                <Form size=\"large\" onSubmit={this.handleLogin}>\r\n                  <Form.Input\r\n                    icon=\"user\"\r\n                    iconPosition=\"left\"\r\n                    label=\"Username\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Form.Input\r\n                    icon=\"lock\"\r\n                    iconPosition=\"left\"\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n\r\n                  <Button color=\"green\" content=\"Login\" />\r\n                </Form>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  color=\"orange\"\r\n                  content=\"Register\"\r\n                  icon=\"signup\"\r\n                  size=\"big\"\r\n                  onClick={event => this.handleRegisterClick(event)}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n\r\n            <Divider vertical>Or</Divider>\r\n          </Segment>\r\n          {/* <Message align=\"center\">\r\n            Not registered yet? No worries!{\" \"}\r\n            <Button onClick={this.handleClickHeretoRegister}>\r\n              Click to Register\r\n            </Button>\r\n          </Message> */}\r\n        </Grid.Column>\r\n      </Grid>\r\n    ) : (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}